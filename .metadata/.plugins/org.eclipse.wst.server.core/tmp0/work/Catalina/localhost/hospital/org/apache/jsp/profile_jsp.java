/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.82
 * Generated at: 2023-10-26 03:07:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class profile_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("import javax.servlet.*;\r\n");
      out.write("import javax.servlet.http.*;\r\n");
      out.write("import java.io.*;\r\n");
      out.write("import java.sql.*;\r\n");
      out.write("\r\n");
      out.write("public class UserProfileServlet extends HttpServlet {\r\n");
      out.write("    public void doPost(HttpServletRequest request, HttpServletResponse response)\r\n");
      out.write("            throws ServletException, IOException {\r\n");
      out.write("        // Extract form parameters for updating user profile\r\n");
      out.write("        String username = request.getParameter(\"username\");\r\n");
      out.write("        String email = request.getParameter(\"email\");\r\n");
      out.write("        // ... Extract other form parameters\r\n");
      out.write("\r\n");
      out.write("        // Database connection parameters\r\n");
      out.write("        String jdbcURL = \"jdbc:mysql://localhost:3306/your_database\";\r\n");
      out.write("        String dbUser = \"your_username\";\r\n");
      out.write("        String dbPassword = \"your_password\";\r\n");
      out.write("\r\n");
      out.write("        try {\r\n");
      out.write("            // Connect to the database\r\n");
      out.write("            Connection connection = DriverManager.getConnection(jdbcURL, dbUser, dbPassword);\r\n");
      out.write("\r\n");
      out.write("            // Create SQL query to update user data\r\n");
      out.write("            String updateQuery = \"UPDATE users SET email=?, ... WHERE username=?\";\r\n");
      out.write("            PreparedStatement preparedStatement = connection.prepareStatement(updateQuery);\r\n");
      out.write("            preparedStatement.setString(1, email);\r\n");
      out.write("            // ... Set other parameters\r\n");
      out.write("            preparedStatement.setString(n, username); // Set the WHERE clause parameter\r\n");
      out.write("\r\n");
      out.write("            // Execute the query\r\n");
      out.write("            int rowsAffected = preparedStatement.executeUpdate();\r\n");
      out.write("\r\n");
      out.write("            // Close the database connection\r\n");
      out.write("            preparedStatement.close();\r\n");
      out.write("            connection.close();\r\n");
      out.write("\r\n");
      out.write("            if (rowsAffected > 0) {\r\n");
      out.write("                // Profile update successful, display a success alert\r\n");
      out.write("                PrintWriter out = response.getWriter();\r\n");
      out.write("                out.println(\"<script>alert('Profile update successful');</script>\");\r\n");
      out.write("                out.println(\"<script>location.href='profile.jsp';</script>\");\r\n");
      out.write("            } else {\r\n");
      out.write("                // Profile update failed, display an error alert\r\n");
      out.write("                PrintWriter out = response.getWriter();\r\n");
      out.write("                out.println(\"<script>alert('Profile update failed');</script>\");\r\n");
      out.write("                out.println(\"<script>location.href='profile.jsp';</script>\");\r\n");
      out.write("            }\r\n");
      out.write("        } catch (SQLException e) {\r\n");
      out.write("            // Handle database errors\r\n");
      out.write("            e.printStackTrace();\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
